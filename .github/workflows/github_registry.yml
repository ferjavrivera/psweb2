# This is a basic workflow to help you get started with Actions

name: CI to Github R

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Set up del buidlx
      - id: bildx
        uses: docker/setup-buildx-action@v1

      
      - name: Cache docker layers
        uses: actions/cache@2
        with:
          path: /temp/.buidx-cache
          key: ${{ runner.os }}-buidx-${{github.sha}}
          restore-keys: |
             ${{ runner.os}}-buildx-
             
      - name: login to Github Registry
        if: github.event_name != 'pull request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrests.GH_TOKEN }}
          
      - name: Build y push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
           context: ./
           file: ./Dokerfile
           builder: ${{ steps.buildx.outputs.name }}
           push: true
           tags: ghcr.io/${{ github.repository_owner }}/psweb2:latest
           cache-from: type=local,src=/tmp/.buildx-cache
           cache-to: type=local,dest=/tmp/.bildx-cache
           
      - name: Image digest
        run: echo${{ steps.docker.build.outputs.digest }}
  
